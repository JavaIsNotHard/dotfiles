#
#Default config for sway
# # Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu ./.config/rofi/launchers/type-2/launcher.sh
set $menu rofi -show
set $powermenu ./.config/rofi/powermenu/type-4/powermenu.sh
### Output configuratio
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $HOME/Pictures/2girls.png fill
#output * bg ~/wall/2612671-minimalism-hq-desktop-wallpaper.jpg fill
#output * bg ~/wall/3.png fill
#output * bg ~/wallpapers/Universal/kitten.jpg fill

# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
#
exec swayidle -w \
          timeout 1000 'sytemctl suspend' \
          timeout 1500 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
          before-sleep 'swaylock -f -c 000000' \

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    
    bindsym --to-code $mod+s exec 'grim -g "$(slurp)" ~/Pictures/Screenshots/$(date +%Hh_%Mm_%Ss_%d_%B_%Y).png'
    bindsym $mod+shift+s exec grim -g "$(slurp -d)" - | wl-copy -t image/png
    # Kill focused window
    bindsym $mod+q kill
    # Start your launcher
    bindsym $mod+shift+p exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+q exec pkill sway
#
# Moving around:
#
    # Move your focus around

    bindsym $mod+alt+$left resize shrink width 20px
    bindsym $mod+alt+$up resize grow height 20px
    bindsym $mod+alt+$down resize shrink height 20px
    bindsym $mod+alt+$right resize grow width 20px

    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+t layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    # Ditto, with arrow keys
    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.

set $gnome-schema org.gnome.desktop.interface

exec_always {
    gsettings set org.gnome.desktop.interface gtk-theme 'WhiteSur-Dark'
    gsettings set org.gnome.desktop.interface icon-theme 'WhiteSur-Dark'
    gsettings set org.gnome.desktop.interface cursor-theme 'Bibata-Modern-Classic'
    gsettings set org.gnome.desktop.interface font-name 'Cantarell 11'
}

   bar {
       position bottom
       status_command i3status
       font pango: Terminus
       mode dock
       height 20
       }
#  bar {
#    position bottom
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
#     font pango: Terminus, FontAwesome 11
#     status_command i3status-rs ~/.config/i3status-rust/config.toml
#     height 20

#      colors {
#          statusline #ffffff
#          background #1d2021
#          inactive_workspace #282c34 #282c34 #5c5c5c
#      }
# }
input type:touchpad {
    tap enabled
    pointer_accel 0.4
    natural_scroll enabled
}

set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
exec rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob

smart_borders on
default_border pixel 1
#  client.focused          #b2babb #b2babb  #b2babb #1e222a
#  client.focused_inactive #1d2021 #1d2021 #1d2021 #1d2021
#  client.urgent           #e06c75 #e06c75 #e06c75 #e06c75
#  client.unfocused        #1d2021 #1d2021 #1d2021 #1d2021
#
for_window [class=".*"]     opacity 1
for_window [app_id=".*"]    opacity 1 

# #autostart
#exec waybar
exec python ~/scripts/pulse-volume-watcher.py | xob 
exec mpd 
exec udiskie 
#exec emacs --daemon 
exec dunst
exec sway-audio-idle-inhibit

#custom keybinding
# bindsym $mod+Shift+w exec ~/bin/waybar-spawn.sh
# bindsym $mod+Ctrl+w exec ~/bin/waybar-kill.sh
bindsym $mod+Alt+p exec $file
bindsym $mod+Alt+s grim
bindsym $mod+alt+space exec $powermenu
#bindsym $mod+Shift+e exec emacsclient -c -a 'emacs'
bindsym $mod+Shift+e exec emacs
bindsym $mod+shift+n exec st -e nvim
titlebar_border_thickness 1
titlebar_padding 1
for_window [app_id="ulauncher"] border none
#system keybinding
#bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1| awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
#bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1| awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
#bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
#bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86AudioRaiseVolume exec pamixer -ui 2 && pamixer --get-volume > $WOBSOCK
bindsym XF86AudioLowerVolume exec pamixer -ud 2 && pamixer --get-volume > $WOBSOCK
bindsym XF86AudioMute exec pamixer --toggle-mute && ( [ "$(pamixer --get-mute)" = "true" ] && echo 0 > $WOBSOCK ) || pamixer --get-volume > $WOBSOCK
bindsym XF86MonBrightnessDown exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
bindsym XF86MonBrightnessUp exec brightnessctl set +5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86Search exec ~/.config/rofi/launchers/type-4/launcher.sh

#include
include /etc/sway/config.d/*
